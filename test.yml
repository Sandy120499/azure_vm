trigger:
  branches:
    include:
      - main  # Replace with your branch name or pattern

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Lint
  jobs:
  - job: LintCode
    displayName: Lint Code
    steps:
    - script: |
        az bicep build --file main.bicep
      name: LintBicepCode
      displayName: Run Bicep Lint

- stage: Validate
  jobs:
  - job: ValidateBicepCode
    displayName: Validate Bicep Code
    steps:
    - task: AzureCLI@2
      name: RunPreflightValidation
      displayName: Run Preflight Validation
      inputs:
        azureSubscription: 'sandy-svc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group validate --resource-group sandy-RG \
          --template-file main.bicep \
          --parameters @Linux_parameter.json

- stage: Deploy
  jobs:
  - job: Deploy
    displayName: Deploy to Azure
    steps:
    - task: AzureCLI@2
      name: DeployBicepTemplate
      displayName: Deploy Bicep Template
      inputs:
        azureSubscription: 'sandy-svc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create --name $(Build.BuildNumber) \
          --resource-group sandy-RG \
          --template-file main.bicep \
          --parameters @Linux_parameter.json

- stage: InstallApache
  jobs:
  - job: RunScript
    displayName: Install Apache on VM
    steps:
    - task: AzureCLI@2
      name: InstallApacheOnVM
      displayName: Install Apache on VM
      inputs:
        azureSubscription: 'sandy-svc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az vm run-command invoke --command-id RunShellScript --name Linux-sandy --resource-group sandy-RG --scripts '
          #!/bin/bash

          # Update package lists
          sudo apt update

          # Install Apache
          sudo apt install -y apache2

          # Enable Apache to start on boot
          sudo systemctl enable apache2

          # Start Apache service
          sudo systemctl start apache2

          # Create a test index.html page
          echo "<!DOCTYPE html>
          <html>
          <head>
              <title>Test Page</title>
          </head>
          <body>
              <h1>Test Page Working</h1>
          </body>
          </html>" | sudo tee /var/www/html/index.html

          # Adjust firewall to allow HTTP traffic
          sudo ufw allow "Apache"

          # Output the test page URL
          IP_ADDRESS=$(hostname -I | awk "{print \$1}")
          echo "Apache has been installed and is serving a test page."
          echo "You can view it at: http://\$IP_ADDRESS/"
          '
